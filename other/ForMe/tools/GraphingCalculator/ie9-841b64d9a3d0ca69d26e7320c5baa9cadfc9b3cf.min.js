(function (a) {
    a.extend(a, {
        placeholder: {
            browser_supported: function () {
                return this._supported !== undefined ? this._supported : this._supported = "placeholder" in a('<input type="text">')[0]
            },
            shim: function (b) {
                var c = {
                    color: "#888",
                    cls: "placeholder",
                    lr_padding: 4,
                    selector: "input[placeholder], textarea[placeholder]"
                };
                a.extend(c, b), !this.browser_supported() && a(c.selector)._placeholder_shim(c)
            }
        }
    }), a.extend(a.fn, {
        _placeholder_shim: function (b) {
            function c(c) {
                var d = a(c).offsetParent().offset(),
                    e = a(c).offset();
                return {
                    top: e.top - d.top + (a(c).outerHeight() - a(c).height()) / 2,
                    left: e.left - d.left + b.lr_padding,
                    width: a(c).width() - b.lr_padding
                }
            }
            return this.each(function () {
                var d, e, f, g = a(this);
                if (g.data("placeholder")) return d = g.data("placeholder"), d.css(c(g)), !0;
                e = {}, !g.is("textarea") && g.css("height") != "auto" && (e = {
                    lineHeight: g.css("height"),
                    whiteSpace: "nowrap"
                }), f = a("<label />").text(g.attr("placeholder")).addClass(b.cls).css(a.extend({
                    position: "absolute",
                    display: "inline",
                    "float": "none",
                    overflow: "hidden",
                    textAlign: "left",
                    color: b.color,
                    cursor: "text",
                    paddingTop: g.css("padding-top"),
                    paddingLeft: g.css("padding-left"),
                    fontSize: g.css("font-size"),
                    fontFamily: g.css("font-family"),
                    fontStyle: g.css("font-style"),
                    fontWeight: g.css("font-weight"),
                    textTransform: g.css("text-transform"),
                    zIndex: 99
                }, e)).css(c(this)).attr("for", this.id).data("target", g).click(function () {
                    a(this).data("target").focus()
                }).insertBefore(this), g.data("placeholder", f).focus(function () {
                    f.hide()
                }).blur(function () {
                    f[g.val().length ? "hide" : "show"]()
                }).triggerHandler("blur"), a(window).resize(function () {
                    var a = f.data("target");
                    f.css(c(a))
                })
            })
        }
    })
})(jQuery), jQuery(document).add(window).bind("ready load", function () {
    jQuery.placeholder && jQuery.placeholder.shim()
});